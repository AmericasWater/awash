# Map for the time steps with maximum captures and releases
Idx_max_cap=which(apply(capture, MARGIN=2, FUN = sum)==max(apply(capture, MARGIN=2, FUN = sum)))
Idx_max_re=which(apply(release, MARGIN=2, FUN = sum)==min(apply(release, MARGIN=2, FUN = sum)))
resdf$capture_max=capture[,Idx_max_cap]
resdf$release_max=capture[,Idx_max_re]
#png(paste0(plot_path,'capture_max_map.png'), height = 800, width = 1200)
p1 <- p +
geom_point(data=resdf, aes(x=lon, y=lat, colour = log1p(capture_max)), size=1)+
scale_colour_gradient(low='blue', high='red')+
ggtitle(paste0('Log1p of captures at tstep ', Idx_max_cap))+
theme_bw()
p1
#png(paste0(plot_path,'release2009_map.png'), height = 800, width = 1200)
p1 <- p +
geom_point(data=resdf, aes(x=lon, y=lat, colour = log1p(release_max)), size=1)+
scale_colour_gradient(low='blue', high='red')+
ggtitle(paste0('Log1p of releases at tstep ', Idx_max_re))+
theme_bw()
p1
## Analyses of reservoirs with highest variance across years
nres=10
IdX=order(resdf$sd_cap, decreasing = T)[1:nres]
df_nres <- resdf[IdX, ]
# Map
#png(paste0(plot_path,'release2009_map.png'), height = 800, width = 1200)
p1 <- ggplot()+
geom_polygon(data=map, aes(x=long, y=lat, group = group),colour="black", fill="white") +
geom_point(data=df_nres, aes(x=lon, y=lat, size=sd_cap), colour='red')+
#geom_text(aes(label=Name),hjust=0, vjust=0)+ in case we add names to the reservoir file
theme_bw()+
ggtitle(paste0('Locations of ', nres, ' reservoirs with highest variance across time'))
p1
# TS of captures and releases
captures_nres <- t(captures[IdX, ])
capture_nres <- t(capture[IdX, ])
release_nres <- t(release[IdX, ])
colnames(captures_nres)=colnames(capture_nres)=colnames(release_nres)=paste0('dam_',df_nres$colid)
rownames(captures_nres)=rownames(capture_nres)=rownames(release_nres)=start_year:end_year
df_nres2 <- data.frame(Year=rep(c(start_year:end_year), nres), captures=as.vector(captures_nres),
capture = as.vector(capture_nres), release=as.vector(release_nres),
name=rep(colnames(captures_nres), each=nyears))
#png(paste0(plot_path,'captures', nres, ' reservoirs.png'), height = 800, width = 1200)
p <- ggplot(data=df_nres2,aes(x=Year))+
geom_line(aes(y=captures, col=name), linetype=1)+
theme_bw()+
ggtitle(paste0('Evolution of captures and releases through time for ', nres, ' reservoirs'))+
ylab('Captures and releases [1000 m3]')+
scale_x_continuous(breaks=c(start_year:end_year))
p
#png(paste0(plot_path,'capture', nres, ' reservoirs.png'), height = 800, width = 1200)
p <- ggplot(data=df_nres2,aes(x=Year))+
geom_line(aes(y=capture, col=name), linetype=1)+
theme_bw()+
ggtitle(paste0('Evolution of captures through time for ', nres, ' reservoirs'))+
ylab('Captures [1000 m3]')+
scale_x_continuous(breaks=c(start_year:end_year))
p
#png(paste0(plot_path,'release', nres, ' reservoirs.png'), height = 800, width = 1200)
p <- ggplot(data=df_nres2,aes(x=Year))+
geom_line(aes(y=release, col=name), linetype=1)+
theme_bw()+
ggtitle(paste0('Evolution of releases through time for ', nres, ' reservoirs'))+
ylab('Releases [1000 m3]')+
scale_x_continuous(breaks=c(start_year:end_year))
p
## Analysis of "inactive" dams
# Maps
#png(paste0(plot_path,'locations_max100_reservoirs.png'), height = 800, width = 1200)
p1 <- ggplot()+
geom_polygon(data=map, aes(x=long, y=lat, group = group),colour="black", fill="white") +
geom_point(data=resdf[(apply(abs(captures), MARGIN=1, FUN = max)<1e-1),], aes(x=lon, y=lat), colour='red')+
#geom_text(aes(label=Name),hjust=0, vjust=0)+
theme_bw()+
ggtitle('Locations of dams whose maximum capture or release is less than 100 m3')
p1
#png(paste0(plot_path,'locations_max10_reservoirs.png'), height = 800, width = 1200)
p1 <- ggplot()+
geom_polygon(data=map, aes(x=long, y=lat, group = group),colour="black", fill="white") +
geom_point(data=resdf[(apply(abs(captures), MARGIN=1, FUN = max)<1e-2),], aes(x=lon, y=lat), colour='red')+
#geom_text(aes(label=Name),hjust=0, vjust=0)+
theme_bw()+
ggtitle('Locations of dams whose maximum capture or release is less than 10 m3')
p1
#dev.off()
#png(paste0(plot_path,'locations_max1_reservoirs.png'), height = 800, width = 1200)
p1 <- ggplot()+
geom_polygon(data=map, aes(x=long, y=lat, group = group),colour="black", fill="white") +
geom_point(data=resdf[(apply(abs(captures), MARGIN=1, FUN = max)<1e-3),], aes(x=lon, y=lat), colour='red')+
#geom_text(aes(label=Name),hjust=0, vjust=0)+
theme_bw()+
ggtitle('Locations of dams whose maximum capture or release is less than 1 m3')
p1
# Evolution of number of "inactive" reservoirs
regions=region_ind[match(resdf$fips, fips[1:3109])]
df1<-data.frame(Year=rep(c(start_year:end_year), each=nrow(resdf)),
inact0=as.vector((abs(captures) < 1000)),
inact1=as.vector((abs(captures) < 1e-1)),
inact2=as.vector((abs(captures) < 1e-2)),
inact3=as.vector((abs(captures) < 1e-3)),
id=rep(resdf$colid, nyears),
region=rep(regions, nyears))
df1 %>%
group_by(Year, region) %>%
summarise(inact0 = sum(inact0), inact1 = sum(inact1), inact2 = sum(inact2), inact3 = sum(inact3)) ->df2
df1 %>%
group_by(Year) %>%
summarise(inact0 = sum(inact0), inact1 = sum(inact1), inact2 = sum(inact2), inact3 = sum(inact3)) ->df3
df2$inact0_prop=df2$inact0/as.vector(rep(table(regions), 10))
df2$inact1_prop=df2$inact1/as.vector(rep(table(regions), 10))
df2$inact2_prop=df2$inact2/as.vector(rep(table(regions), 10))
df2$inact3_prop=df2$inact3/as.vector(rep(table(regions), 10))
#png(paste0(plot_path,'ev_reservoirs_less10e6.png'), height = 800, width = 1200)
p <- ggplot(data=df2, aes(x=Year, colour=region))+
geom_point(aes(y=inact1_prop))+
theme_bw()+
ggtitle('Evolution of the proportion of reservoirs with captures/releases of less than 10^6 m3')+
scale_x_continuous(breaks=c(start_year:end_year))
p
library(dplyr)
library(ggplot2)
library(ggmap)
install.packages(ggmap)
install.packages('ggmap')
library(ggmap)
library(maps)
library(maptools)
library(tmap)      # package for plotting
library(readxl)    # for reading Excel
library(tmaptools)
data(wrld_simpl)
result_path = paste0("C:/Users/luc/Desktop/awash/analyses/climatevariability/", "analyzereservoir1/")
setwd(result_path)
plot_path = paste0(result_path, "plots/")
dir.create(plot_path, recursive = T)
## Input run parameters
start_year=2010
result_path = paste0("C:/Users/luc/Desktop/awash/analyses/climatevariability/", "analyzereservoir_1yr_1month/")
setwd(result_path)
plot_path = paste0(result_path, "plots/")
dir.create(plot_path, recursive = T)
## Input run parameters
start_year=2010
end_year=2010
nyears=end_year-start_year+1
nmonths = 12
time_ind0 <- c(1:nyears*nmonths)
## Set up geographic groups
# County fips, state fips, region indexes
mastercounties <- read.csv("../../../data/global/counties.csv")
fips <- matrix(mastercounties$fips, nrow = 3109, ncol = length(time_ind0)) %>% as.vector()
time_ind <- t(matrix(time_ind0, nrow = length(time_ind0), ncol = 3109)) %>% as.vector() %>% as.factor()
state_ind <- matrix(mastercounties$state, nrow = 3109, ncol = max(time_ind0)) %>% as.vector()
region_ind <- state_ind
region_ind[which(region_ind %in% c("CT", "ME", "MA", "NH", "RI", "VT"))] <- "I"
region_ind[which(region_ind %in% c("NJ", "NY"))] <- "II"
region_ind[which(region_ind %in% c("DE", "DC", "MD", "PA", "VA", "WV"))] <- "III"
region_ind[which(region_ind %in% c("AL", "FL", "GA", "KY", "MS", "NC", "SC", "TN"))] <- "IV"
region_ind[which(region_ind %in% c("IL", "IN", "MI", "MN", "OH", "WI"))] <- "V"
region_ind[which(region_ind %in% c("AR", "LA", "NM", "OK", "TX"))] <- "VI"
region_ind[which(region_ind %in% c("IA", "KS", "MO", "NE"))] <- "VII"
region_ind[which(region_ind %in% c("CO", "MT", "ND", "SD", "UT", "WY"))] <- "VIII"
region_ind[which(region_ind %in% c("AZ", "CA", "NV"))] <- "IX"
region_ind[which(region_ind %in% c("ID", "OR", "WA"))] <- "X"
## Read-in data
# Read-in reservoir data
resdf <- read.csv("../../../data/counties/reservoirs/allreservoirs.csv")
resdf$state=state_ind[match(resdf$fips, fips[1:3109])]
# Read-in results
captures <- as.matrix(read.csv("captures.csv", header = F)) # reservoir level
max(abs(captures))
storage <- as.matrix(read.csv("storage.csv", header = F)) # reservoir level
smax <- matrix(as.matrix(read.csv("storagecapmax.csv", header = F)), nrow = dim(captures)[1], ncol = dim(captures)[2])#*(1-0.05)^12
result_path = paste0("C:/Users/luc/Desktop/awash/analyses/climatevariability/", "analyzereservoir1/")
setwd(result_path)
plot_path = paste0(result_path, "plots/")
dir.create(plot_path, recursive = T)
## Input run parameters
start_year=2000
end_year=2010
nyears=end_year-start_year+1
nmonths = 12
time_ind0 <- c(1:nyears*nmonths)
## Set up geographic groups
# County fips, state fips, region indexes
mastercounties <- read.csv("../../../data/global/counties.csv")
fips <- matrix(mastercounties$fips, nrow = 3109, ncol = length(time_ind0)) %>% as.vector()
time_ind <- t(matrix(time_ind0, nrow = length(time_ind0), ncol = 3109)) %>% as.vector() %>% as.factor()
state_ind <- matrix(mastercounties$state, nrow = 3109, ncol = max(time_ind0)) %>% as.vector()
region_ind <- state_ind
region_ind[which(region_ind %in% c("CT", "ME", "MA", "NH", "RI", "VT"))] <- "I"
region_ind[which(region_ind %in% c("NJ", "NY"))] <- "II"
region_ind[which(region_ind %in% c("DE", "DC", "MD", "PA", "VA", "WV"))] <- "III"
region_ind[which(region_ind %in% c("AL", "FL", "GA", "KY", "MS", "NC", "SC", "TN"))] <- "IV"
region_ind[which(region_ind %in% c("IL", "IN", "MI", "MN", "OH", "WI"))] <- "V"
region_ind[which(region_ind %in% c("AR", "LA", "NM", "OK", "TX"))] <- "VI"
region_ind[which(region_ind %in% c("IA", "KS", "MO", "NE"))] <- "VII"
region_ind[which(region_ind %in% c("CO", "MT", "ND", "SD", "UT", "WY"))] <- "VIII"
region_ind[which(region_ind %in% c("AZ", "CA", "NV"))] <- "IX"
region_ind[which(region_ind %in% c("ID", "OR", "WA"))] <- "X"
## Read-in data
# Read-in reservoir data
resdf <- read.csv("../../../data/counties/reservoirs/allreservoirs.csv")
resdf$state=state_ind[match(resdf$fips, fips[1:3109])]
# Read-in results
captures <- as.matrix(read.csv("captures.csv", header = F)) # reservoir level
max(abs(captures))
storage <- as.matrix(read.csv("storage.csv", header = F)) # reservoir level
smax <- matrix(as.matrix(read.csv("storagecapmax.csv", header = F)), nrow = dim(captures)[1], ncol = dim(captures)[2])#*(1-0.05)^12
failuresin <- read.csv("failuresin.csv", header = F)
failurecon <- read.csv("failurecon.csv", header = F)
# Separate captures and releases
release <- captures
release[which(release > 0)] <- 0
proprel <- release/smax
proprel[which(smax == 0)] <- 0
hist(rowSums(proprel), breaks = 10)
capture <- captures
capture[which(capture < 0)] <- 0
propcapture <- capture/smax
propcapture[which(smax == 0)] <- 0
hist(propcapture, breaks = 100)
sum(rowMeans(propcapture)<0.01)/length(rowMeans(propcapture))*100
mpctcap <- 100*rowMeans(propcapture)
## Reservoir maps
# Compute basic reservoir statistics through time
resdf$capture=apply(capture, MARGIN=1, FUN = sum)
resdf$release=apply(release, MARGIN=1, FUN = sum)
resdf$captures=apply(captures, MARGIN=1, FUN = sum)
resdf$sd_cap=apply(captures, MARGIN=1, FUN = sd)
resdf$max_capture=apply(capture, MARGIN=1, FUN = max)
resdf$max_release=-apply(release, MARGIN=1, FUN = min)
# Mas basic reservoir statistics
map <- map_data("usa")
#png(paste0(plot_path,'reservoir_map.png'), height = 800, width = 1200)
p <- ggplot()+
geom_polygon(data=map, aes(x=long, y=lat, group = group),colour="black", fill="white")+
geom_point(data=resdf, aes(x=lon, y=lat), color='red')+
ggtitle('CONUS reservoir map')+
theme_bw()
print(p)
p <- ggplot()+
geom_polygon(data=map, aes(x=long, y=lat, group = group),colour="black", fill="white")
#png(paste0(plot_path, 'sd_capture_map.png'), height = 800, width = 1200)
p1 <- p +
geom_point(data=resdf, aes(x=lon, y=lat, colour = log1p(sd_cap)), size=1)+
scale_colour_gradient(low='blue', high='red')+
ggtitle('Log1p of the standard deviation of captures through time')+
theme_bw()
p1
#png(paste0(plot_path,'max_capture_map.png'), height = 800, width = 1200)
p1 <- p +
geom_point(data=resdf, aes(x=lon, y=lat, colour = log1p(max_capture)), size=1)+
scale_colour_gradient(low='blue', high='red')+
ggtitle('Log1p of the maximum capture though time')+
theme_bw()
p1
#png(paste0(plot_path,'max_release_map.png'), height = 800, width = 1200)
p1 <- p +
geom_point(data=resdf, aes(x=lon, y=lat, colour = log1p(max_release)), size=1)+
scale_colour_gradient(low='blue', high='red')+
ggtitle('Log1p of the maximum release thtough time')+
theme_bw()
#png(paste0(plot_path,'max_release_map.png'), height = 800, width = 1200)
p1 <- p +
geom_point(data=resdf, aes(x=lon, y=lat, colour = log1p(max_release)), size=1)+
scale_colour_gradient(low='blue', high='red')+
ggtitle('Log1p of the maximum release through time')+
theme_bw()
p1
# Map for the time steps with maximum captures and releases
Idx_max_cap=which(apply(capture, MARGIN=2, FUN = sum)==max(apply(capture, MARGIN=2, FUN = sum)))
Idx_max_re=which(apply(release, MARGIN=2, FUN = sum)==min(apply(release, MARGIN=2, FUN = sum)))
resdf$capture_max=capture[,Idx_max_cap]
resdf$release_max=capture[,Idx_max_re]
#png(paste0(plot_path,'capture_max_map.png'), height = 800, width = 1200)
p1 <- p +
geom_point(data=resdf, aes(x=lon, y=lat, colour = log1p(capture_max)), size=1)+
scale_colour_gradient(low='blue', high='red')+
ggtitle(paste0('Log1p of captures at tstep ', Idx_max_cap))+
theme_bw()
p1
#png(paste0(plot_path,'release2009_map.png'), height = 800, width = 1200)
p1 <- p +
geom_point(data=resdf, aes(x=lon, y=lat, colour = log1p(release_max)), size=1)+
scale_colour_gradient(low='blue', high='red')+
ggtitle(paste0('Log1p of releases at tstep ', Idx_max_re))+
theme_bw()
p1
## Analyses of reservoirs with highest variance across years
nres=10
IdX=order(resdf$sd_cap, decreasing = T)[1:nres]
df_nres <- resdf[IdX, ]
# Map
#png(paste0(plot_path,'release2009_map.png'), height = 800, width = 1200)
p1 <- ggplot()+
geom_polygon(data=map, aes(x=long, y=lat, group = group),colour="black", fill="white") +
geom_point(data=df_nres, aes(x=lon, y=lat, size=sd_cap), colour='red')+
#geom_text(aes(label=Name),hjust=0, vjust=0)+ in case we add names to the reservoir file
theme_bw()+
ggtitle(paste0('Locations of ', nres, ' reservoirs with highest variance across time'))
p1
# TS of captures and releases
captures_nres <- t(captures[IdX, ])
capture_nres <- t(capture[IdX, ])
release_nres <- t(release[IdX, ])
colnames(captures_nres)=colnames(capture_nres)=colnames(release_nres)=paste0('dam_',df_nres$colid)
rownames(captures_nres)=rownames(capture_nres)=rownames(release_nres)=start_year:end_year
df_nres2 <- data.frame(Year=rep(c(start_year:end_year), nres), captures=as.vector(captures_nres),
capture = as.vector(capture_nres), release=as.vector(release_nres),
name=rep(colnames(captures_nres), each=nyears))
colnames(captures_nres)=colnames(capture_nres)=colnames(release_nres)=paste0('dam_',df_nres$colid)
View(capture_nres)
View(df_nres)
## Input run parameters
start_year=2001
colnames(captures_nres)=colnames(capture_nres)=colnames(release_nres)=paste0('dam_',df_nres$colid)
rownames(captures_nres)=rownames(capture_nres)=rownames(release_nres)=start_year:end_year
df_nres2 <- data.frame(Year=rep(c(start_year:end_year), nres), captures=as.vector(captures_nres),
capture = as.vector(capture_nres), release=as.vector(release_nres),
name=rep(colnames(captures_nres), each=nyears))
end_year
start_year
rep(c(start_year:end_year), nres)
as.vector(captures_nres)
as.vector(capture_nres)
as.vector(release_nres)
nyears
nyears=end_year-start_year+1
df_nres2 <- data.frame(Year=rep(c(start_year:end_year), nres), captures=as.vector(captures_nres),
capture = as.vector(capture_nres), release=as.vector(release_nres),
name=rep(colnames(captures_nres), each=nyears))
#png(paste0(plot_path,'captures', nres, ' reservoirs.png'), height = 800, width = 1200)
p <- ggplot(data=df_nres2,aes(x=Year))+
geom_line(aes(y=captures, col=name), linetype=1)+
theme_bw()+
ggtitle(paste0('Evolution of captures and releases through time for ', nres, ' reservoirs'))+
ylab('Captures and releases [1000 m3]')+
scale_x_continuous(breaks=c(start_year:end_year))
p
#png(paste0(plot_path,'capture', nres, ' reservoirs.png'), height = 800, width = 1200)
p <- ggplot(data=df_nres2,aes(x=Year))+
geom_line(aes(y=capture, col=name), linetype=1)+
theme_bw()+
ggtitle(paste0('Evolution of captures through time for ', nres, ' reservoirs'))+
ylab('Captures [1000 m3]')+
scale_x_continuous(breaks=c(start_year:end_year))
p
#png(paste0(plot_path,'release', nres, ' reservoirs.png'), height = 800, width = 1200)
p <- ggplot(data=df_nres2,aes(x=Year))+
geom_line(aes(y=release, col=name), linetype=1)+
theme_bw()+
ggtitle(paste0('Evolution of releases through time for ', nres, ' reservoirs'))+
ylab('Releases [1000 m3]')+
scale_x_continuous(breaks=c(start_year:end_year))
p
## Analysis of "inactive" dams
# Maps
#png(paste0(plot_path,'locations_max100_reservoirs.png'), height = 800, width = 1200)
p1 <- ggplot()+
geom_polygon(data=map, aes(x=long, y=lat, group = group),colour="black", fill="white") +
geom_point(data=resdf[(apply(abs(captures), MARGIN=1, FUN = max)<1e-1),], aes(x=lon, y=lat), colour='red')+
#geom_text(aes(label=Name),hjust=0, vjust=0)+
theme_bw()+
ggtitle('Locations of dams whose maximum capture or release is less than 100 m3')
p1
#png(paste0(plot_path,'locations_max10_reservoirs.png'), height = 800, width = 1200)
p1 <- ggplot()+
geom_polygon(data=map, aes(x=long, y=lat, group = group),colour="black", fill="white") +
geom_point(data=resdf[(apply(abs(captures), MARGIN=1, FUN = max)<1e-2),], aes(x=lon, y=lat), colour='red')+
#geom_text(aes(label=Name),hjust=0, vjust=0)+
theme_bw()+
ggtitle('Locations of dams whose maximum capture or release is less than 10 m3')
p1
#dev.off()
#png(paste0(plot_path,'locations_max1_reservoirs.png'), height = 800, width = 1200)
p1 <- ggplot()+
geom_polygon(data=map, aes(x=long, y=lat, group = group),colour="black", fill="white") +
geom_point(data=resdf[(apply(abs(captures), MARGIN=1, FUN = max)<1e-3),], aes(x=lon, y=lat), colour='red')+
#geom_text(aes(label=Name),hjust=0, vjust=0)+
theme_bw()+
ggtitle('Locations of dams whose maximum capture or release is less than 1 m3')
p1
# Evolution of number of "inactive" reservoirs
regions=region_ind[match(resdf$fips, fips[1:3109])]
df1<-data.frame(Year=rep(c(start_year:end_year), each=nrow(resdf)),
inact0=as.vector((abs(captures) < 1000)),
inact1=as.vector((abs(captures) < 1e-1)),
inact2=as.vector((abs(captures) < 1e-2)),
inact3=as.vector((abs(captures) < 1e-3)),
id=rep(resdf$colid, nyears),
region=rep(regions, nyears))
df1 %>%
group_by(Year, region) %>%
summarise(inact0 = sum(inact0), inact1 = sum(inact1), inact2 = sum(inact2), inact3 = sum(inact3)) ->df2
df1 %>%
group_by(Year) %>%
summarise(inact0 = sum(inact0), inact1 = sum(inact1), inact2 = sum(inact2), inact3 = sum(inact3)) ->df3
df2$inact0_prop=df2$inact0/as.vector(rep(table(regions), 10))
df2$inact1_prop=df2$inact1/as.vector(rep(table(regions), 10))
df2$inact2_prop=df2$inact2/as.vector(rep(table(regions), 10))
df2$inact3_prop=df2$inact3/as.vector(rep(table(regions), 10))
#png(paste0(plot_path,'ev_reservoirs_less10e6.png'), height = 800, width = 1200)
p <- ggplot(data=df2, aes(x=Year, colour=region))+
geom_point(aes(y=inact1_prop))+
theme_bw()+
ggtitle('Evolution of the proportion of reservoirs with captures/releases of less than 10^6 m3')+
scale_x_continuous(breaks=c(start_year:end_year))
p
#png(paste0(plot_path,'ev_reservoirs_less100.png'), height = 800, width = 1200)
p <- ggplot(data=df2, aes(x=Year, colour=region))+
geom_point(aes(y=inact1_prop))+
theme_bw()+
ggtitle('Evolution of the proportion of reservoirs with captures/releases of less than 100 m3')+
scale_x_continuous(breaks=c(start_year:end_year))
p
#png(paste0(plot_path,'ev_reservoirs_less10.png'), height = 800, width = 1200)
p <- ggplot(data=df2, aes(x=Year, colour=region))+
geom_point(aes(y=inact2_prop))+
theme_bw()+
ggtitle('Evolution of the proportion of reservoirs with captures/releases of less than 10 m3')+
scale_x_continuous(breaks=c(start_year:end_year))
p
#png(paste0('plots/ev_reservoirs_less1.png'), height = 800, width = 1200)
p <- ggplot(data=df2, aes(x=Year, colour=region))+
geom_point(aes(y=inact3_prop))+
theme_bw()+
ggtitle('Evolution of the proportion of reservoirs with captures/releases of less than 1 m3')+
scale_x_continuous(breaks=c(start_year:end_year))
p
#png(paste0(plot_path,'ev_reservoirs_less.png'), height = 800, width = 1200)
p <- ggplot(data=df3, aes(x=Year))+
geom_line(aes(y=inact0))+
geom_line(aes(y=inact1), color='lightsalmon')+
geom_line(aes(y=inact2), color='cyan3')+
geom_line(aes(y=inact3), color='darkgreen')+
theme_bw()+
ggtitle('Evolution of the proportion of reservoirs with captures/releases inferior to given threhsolds')+
scale_x_continuous(breaks=c(start_year:end_year))
p
#png(paste0(plot_path,'ev_reservoirs_less100.png'), height = 800, width = 1200)
p <- ggplot(data=df2, aes(x=Year, colour=region))+
geom_point(aes(y=inact1_prop))+
theme_bw()+
ggtitle('Evolution of the proportion of reservoirs with captures/releases of less than 100 m3')+
scale_x_continuous(breaks=c(start_year:end_year))
p
#png(paste0(plot_path,'ev_reservoirs_less10.png'), height = 800, width = 1200)
p <- ggplot(data=df2, aes(x=Year, colour=region))+
geom_point(aes(y=inact2_prop))+
theme_bw()+
ggtitle('Evolution of the proportion of reservoirs with captures/releases of less than 10 m3')+
scale_x_continuous(breaks=c(start_year:end_year))
p
#png(paste0('plots/ev_reservoirs_less1.png'), height = 800, width = 1200)
p <- ggplot(data=df2, aes(x=Year, colour=region))+
geom_point(aes(y=inact3_prop))+
theme_bw()+
ggtitle('Evolution of the proportion of reservoirs with captures/releases of less than 1 m3')+
scale_x_continuous(breaks=c(start_year:end_year))
p
#png(paste0(plot_path,'ev_reservoirs_less.png'), height = 800, width = 1200)
p <- ggplot(data=df3, aes(x=Year))+
geom_line(aes(y=inact0))+
geom_line(aes(y=inact1), color='lightsalmon')+
geom_line(aes(y=inact2), color='cyan3')+
geom_line(aes(y=inact3), color='darkgreen')+
theme_bw()+
ggtitle('Evolution of the proportion of reservoirs with captures/releases inferior to given threhsolds')+
scale_x_continuous(breaks=c(start_year:end_year))
p
View(df3)
p <- ggplot(data=df3, aes(x=Year))+
geom_line(aes(y=inact0))+
geom_line(aes(y=inact1), color='lightsalmon')+
geom_line(aes(y=inact2), color='cyan3')+
geom_line(aes(y=inact3), color='darkgreen')+
theme_bw()+
ggtitle('Evolution of the proportion of reservoirs with captures/releases inferior to given/nthrehsolds')+
scale_x_continuous(breaks=c(start_year:end_year))
p
#dev
p <- ggplot(data=df3, aes(x=Year))+
geom_line(aes(y=inact0))+
geom_line(aes(y=inact1), color='lightsalmon')+
geom_line(aes(y=inact2), color='cyan3')+
geom_line(aes(y=inact3), color='darkgreen')+
theme_bw()+
ggtitle('Evolution of the proportion of reservoirs with captures/releases inferior to given\nthrehsolds')+
scale_x_continuous(breaks=c(start_year:end_year))
p
as.vector(rep(table(regions), 10)
)
table(regions)
View(df3)
df33 = data.frame(Year=rep(df3$Year, times=10), inact=c(df3$inact0, df3$inact1, df3$inact2, df3$inact3),
threshold=rep(c("10e3", "10e-1", "10e-2", "10e-3")))
df33 = data.frame(Year=rep(df3$Year, times=4), inact=c(df3$inact0, df3$inact1, df3$inact2, df3$inact3),
threshold=rep(c("10e3", "10e-1", "10e-2", "10e-3"), each=nyears))
p <- ggplot(data=df33, aes(x=Year))+
geom_line(aes(y=inact, color=threshold))+
theme_bw()+
ggtitle('Evolution of the proportion of reservoirs with captures/releases inferior to given\nthrehsolds')+
scale_x_continuous(breaks=c(start_year:end_year))
p
View(df33)
#dev.off()
p <- ggplot(data=df33, aes(x=Year))+
geom_line(aes(y=inact, color=threshold))+
theme_bw()+
ggtitle('Evolution of the proportion of reservoirs with captures/releases inferior to given\nthrehsolds')+
scale_x_continuous(breaks=c(start_year:end_year))
p
