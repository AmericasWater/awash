library(dplyr)
library(ggplot2)
library(ggmap)
library(maps)
library(maptools)
library(tmap)      # package for plotting
library(readxl)    # for reading Excel
library(tmaptools)
data(wrld_simpl)
setwd('C:/Users/luc/Desktop/awash/analyses/climatevariability/analyzereservoir/')
start_year=2000
end_year=2009
nyears=end_year-start_year+1
time_ind0 <- 1:nyears
dir.create('plots', showWarnings=F)
# - county fips, state fips, region indexes
mastercounties <- read.csv("../../../data/global/counties.csv")
fips <- matrix(mastercounties$fips, nrow = 3109, ncol = length(time_ind0)) %>% as.vector()
time_ind <- t(matrix(time_ind0, nrow = length(time_ind0), ncol = 3109)) %>% as.vector() %>% as.factor()
state_ind <- matrix(mastercounties$state, nrow = 3109, ncol = max(time_ind0)) %>% as.vector()
region_ind <- state_ind
region_ind[which(region_ind %in% c("CT", "ME", "MA", "NH", "RI", "VT"))] <- "I"
region_ind[which(region_ind %in% c("NJ", "NY"))] <- "II"
region_ind[which(region_ind %in% c("DE", "DC", "MD", "PA", "VA", "WV"))] <- "III"
region_ind[which(region_ind %in% c("AL", "FL", "GA", "KY", "MS", "NC", "SC", "TN"))] <- "IV"
region_ind[which(region_ind %in% c("IL", "IN", "MI", "MN", "OH", "WI"))] <- "V"
region_ind[which(region_ind %in% c("AR", "LA", "NM", "OK", "TX"))] <- "VI"
region_ind[which(region_ind %in% c("IA", "KS", "MO", "NE"))] <- "VII"
region_ind[which(region_ind %in% c("CO", "MT", "ND", "SD", "UT", "WY"))] <- "VIII"
region_ind[which(region_ind %in% c("AZ", "CA", "NV"))] <- "IX"
region_ind[which(region_ind %in% c("ID", "OR", "WA"))] <- "X"
# Read-in reservoir data
resdf <- read.csv("../../../data/counties/reservoirs/allreservoirs.csv")
# Delete Alaskan reservoir
AL_Idx=which(resdf$lat>50)
resdf<-resdf[-AL_Idx,]
# Read-in results
captures <- as.matrix(read.csv("captures.csv", header = F)) # reservoir level
storage <- as.matrix(read.csv("storage.csv", header = F)) # reservoir level
smax <- matrix(as.matrix(read.csv("storagecapmax.csv", header = F)), nrow = dim(captures)[1], ncol = dim(captures)[2])#*(1-0.05)^12
captures <- captures[-AL_Idx,]
storage <- storage[-AL_Idx,]
smax <- smax[-AL_Idx,]
failuresin <- read.csv("failuresin.csv", header = F)
failurecon <- read.csv("failurecon.csv", header = F)
# Separate captures and releases
release <- captures
release[which(release > 0)] <- 0
proprel <- release/smax
proprel[which(smax == 0)] <- 0
hist(rowSums(proprel), breaks = 10)
capture <- captures
capture[which(capture < 0)] <- 0
propcapture <- capture/smax
propcapture[which(smax == 0)] <- 0
hist(propcapture, breaks = 100)
sum(rowMeans(propcapture)<0.01)/length(rowMeans(propcapture))*100
mpctcap <- 100*rowMeans(propcapture)
resdf$state=state_ind[match(resdf$fips, fips[1:3109])]
resdf_NY=resdf[resdf$state=='NY',]
# Reservoir maps
map <- map_data("usa")
resdf$capture=apply(capture, MARGIN=1, FUN = sum)
resdf$release=apply(release, MARGIN=1, FUN = sum)
resdf$captures=apply(captures, MARGIN=1, FUN = sum)
resdf$sd_cap=apply(captures, MARGIN=1, FUN = sd)
resdf$max_capture=apply(capture, MARGIN=1, FUN = max)
resdf$max_release=-apply(release, MARGIN=1, FUN = min)
p <- ggplot()+
geom_polygon(data=map, aes(x=long, y=lat, group = group),colour="black", fill="white")
p1 <- p +
geom_point(data=resdf, aes(x=lon, y=lat, colour = log1p(sd_cap)), size=1)+
scale_colour_gradient(low='blue', high='red')+
ggtitle('Log1p of the standard deviation of captures across years')+
theme_bw()
p1
# Read-in reservoir data
resdf <- read.csv("../../../data/counties/reservoirs/allreservoirs.csv")
# Read-in results
captures <- as.matrix(read.csv("captures.csv", header = F)) # reservoir level
storage <- as.matrix(read.csv("storage.csv", header = F)) # reservoir level
smax <- matrix(as.matrix(read.csv("storagecapmax.csv", header = F)), nrow = dim(captures)[1], ncol = dim(captures)[2])#*(1-0.05)^12
captures <- captures[-AL_Idx,]
storage <- storage[-AL_Idx,]
smax <- smax[-AL_Idx,]
failuresin <- read.csv("failuresin.csv", header = F)
failurecon <- read.csv("failurecon.csv", header = F)
# Separate captures and releases
release <- captures
release[which(release > 0)] <- 0
proprel <- release/smax
proprel[which(smax == 0)] <- 0
hist(rowSums(proprel), breaks = 10)
capture <- captures
capture[which(capture < 0)] <- 0
propcapture <- capture/smax
propcapture[which(smax == 0)] <- 0
hist(propcapture, breaks = 100)
sum(rowMeans(propcapture)<0.01)/length(rowMeans(propcapture))*100
mpctcap <- 100*rowMeans(propcapture)
resdf$state=state_ind[match(resdf$fips, fips[1:3109])]
resdf_NY=resdf[resdf$state=='NY',]
p <- ggplot()+
geom_polygon(data=map, aes(x=long, y=lat, group = group),colour="black", fill="white")+
geom_point(data=resdf, aes(x=lon, y=lat), color='red')+
ggtitle('CONUS reservoir map')+
theme_bw()
print(p)
resdf$capture=apply(capture, MARGIN=1, FUN = sum)
resdf$release=apply(release, MARGIN=1, FUN = sum)
resdf$captures=apply(captures, MARGIN=1, FUN = sum)
resdf$sd_cap=apply(captures, MARGIN=1, FUN = sd)
resdf$max_capture=apply(capture, MARGIN=1, FUN = max)
resdf$max_release=-apply(release, MARGIN=1, FUN = min)
# Read-in results
captures <- as.matrix(read.csv("captures.csv", header = F)) # reservoir level
storage <- as.matrix(read.csv("storage.csv", header = F)) # reservoir level
smax <- matrix(as.matrix(read.csv("storagecapmax.csv", header = F)), nrow = dim(captures)[1], ncol = dim(captures)[2])#*(1-0.05)^12
captures <- captures[-AL_Idx,]
library(dplyr)
library(ggplot2)
library(ggmap)
library(maps)
library(maptools)
library(tmap)      # package for plotting
library(readxl)    # for reading Excel
library(tmaptools)
data(wrld_simpl)
setwd('C:/Users/luc/Desktop/awash/analyses/climatevariability/analyzereservoir/')
start_year=2000
end_year=2009
nyears=end_year-start_year+1
time_ind0 <- 1:nyears
dir.create('plots', showWarnings=F)
# - county fips, state fips, region indexes
mastercounties <- read.csv("../../../data/global/counties.csv")
fips <- matrix(mastercounties$fips, nrow = 3109, ncol = length(time_ind0)) %>% as.vector()
time_ind <- t(matrix(time_ind0, nrow = length(time_ind0), ncol = 3109)) %>% as.vector() %>% as.factor()
state_ind <- matrix(mastercounties$state, nrow = 3109, ncol = max(time_ind0)) %>% as.vector()
region_ind <- state_ind
region_ind[which(region_ind %in% c("CT", "ME", "MA", "NH", "RI", "VT"))] <- "I"
region_ind[which(region_ind %in% c("NJ", "NY"))] <- "II"
region_ind[which(region_ind %in% c("DE", "DC", "MD", "PA", "VA", "WV"))] <- "III"
region_ind[which(region_ind %in% c("AL", "FL", "GA", "KY", "MS", "NC", "SC", "TN"))] <- "IV"
region_ind[which(region_ind %in% c("IL", "IN", "MI", "MN", "OH", "WI"))] <- "V"
region_ind[which(region_ind %in% c("AR", "LA", "NM", "OK", "TX"))] <- "VI"
region_ind[which(region_ind %in% c("IA", "KS", "MO", "NE"))] <- "VII"
region_ind[which(region_ind %in% c("CO", "MT", "ND", "SD", "UT", "WY"))] <- "VIII"
region_ind[which(region_ind %in% c("AZ", "CA", "NV"))] <- "IX"
region_ind[which(region_ind %in% c("ID", "OR", "WA"))] <- "X"
# Read-in reservoir data
resdf <- read.csv("../../../data/counties/reservoirs/allreservoirs.csv")
# Delete Alaskan reservoir
# AL_Idx=which(resdf$lat>50)
# resdf<-resdf[-AL_Idx,]
# Read-in results
captures <- as.matrix(read.csv("captures.csv", header = F)) # reservoir level
storage <- as.matrix(read.csv("storage.csv", header = F)) # reservoir level
smax <- matrix(as.matrix(read.csv("storagecapmax.csv", header = F)), nrow = dim(captures)[1], ncol = dim(captures)[2])#*(1-0.05)^12
# captures <- captures[-AL_Idx,]
# storage <- storage[-AL_Idx,]
# smax <- smax[-AL_Idx,]
failuresin <- read.csv("failuresin.csv", header = F)
failurecon <- read.csv("failurecon.csv", header = F)
# Separate captures and releases
release <- captures
release[which(release > 0)] <- 0
proprel <- release/smax
proprel[which(smax == 0)] <- 0
hist(rowSums(proprel), breaks = 10)
capture <- captures
capture[which(capture < 0)] <- 0
propcapture <- capture/smax
propcapture[which(smax == 0)] <- 0
hist(propcapture, breaks = 100)
sum(rowMeans(propcapture)<0.01)/length(rowMeans(propcapture))*100
mpctcap <- 100*rowMeans(propcapture)
resdf$state=state_ind[match(resdf$fips, fips[1:3109])]
resdf_NY=resdf[resdf$state=='NY',]
resdf$capture=apply(capture, MARGIN=1, FUN = sum)
resdf$release=apply(release, MARGIN=1, FUN = sum)
resdf$captures=apply(captures, MARGIN=1, FUN = sum)
resdf$sd_cap=apply(captures, MARGIN=1, FUN = sd)
resdf$max_capture=apply(capture, MARGIN=1, FUN = max)
resdf$max_release=-apply(release, MARGIN=1, FUN = min)
p <- ggplot()+
geom_polygon(data=map, aes(x=long, y=lat, group = group),colour="black", fill="white")
p1 <- p +
geom_point(data=resdf, aes(x=lon, y=lat, colour = log1p(sd_cap)), size=1)+
scale_colour_gradient(low='blue', high='red')+
ggtitle('Log1p of the standard deviation of captures across years')+
theme_bw()
p1
library(dplyr)
library(ggplot2)
library(ggmap)
library(maps)
library(maptools)
library(tmap)      # package for plotting
library(readxl)    # for reading Excel
library(tmaptools)
data(wrld_simpl)
setwd('C:/Users/luc/Desktop/awash/analyses/climatevariability/analyzereservoir/')
start_year=2000
end_year=2009
nyears=end_year-start_year+1
time_ind0 <- 1:nyears
dir.create('plots', showWarnings=F)
# - county fips, state fips, region indexes
mastercounties <- read.csv("../../../data/global/counties.csv")
fips <- matrix(mastercounties$fips, nrow = 3109, ncol = length(time_ind0)) %>% as.vector()
time_ind <- t(matrix(time_ind0, nrow = length(time_ind0), ncol = 3109)) %>% as.vector() %>% as.factor()
state_ind <- matrix(mastercounties$state, nrow = 3109, ncol = max(time_ind0)) %>% as.vector()
region_ind <- state_ind
region_ind[which(region_ind %in% c("CT", "ME", "MA", "NH", "RI", "VT"))] <- "I"
region_ind[which(region_ind %in% c("NJ", "NY"))] <- "II"
region_ind[which(region_ind %in% c("DE", "DC", "MD", "PA", "VA", "WV"))] <- "III"
region_ind[which(region_ind %in% c("AL", "FL", "GA", "KY", "MS", "NC", "SC", "TN"))] <- "IV"
region_ind[which(region_ind %in% c("IL", "IN", "MI", "MN", "OH", "WI"))] <- "V"
region_ind[which(region_ind %in% c("AR", "LA", "NM", "OK", "TX"))] <- "VI"
region_ind[which(region_ind %in% c("IA", "KS", "MO", "NE"))] <- "VII"
region_ind[which(region_ind %in% c("CO", "MT", "ND", "SD", "UT", "WY"))] <- "VIII"
region_ind[which(region_ind %in% c("AZ", "CA", "NV"))] <- "IX"
region_ind[which(region_ind %in% c("ID", "OR", "WA"))] <- "X"
# Read-in reservoir data
resdf <- read.csv("../../../data/counties/reservoirs/allreservoirs.csv")
# Read-in results
captures <- as.matrix(read.csv("captures.csv", header = F)) # reservoir level
storage <- as.matrix(read.csv("storage.csv", header = F)) # reservoir level
smax <- matrix(as.matrix(read.csv("storagecapmax.csv", header = F)), nrow = dim(captures)[1], ncol = dim(captures)[2])#*(1-0.05)^12
failuresin <- read.csv("failuresin.csv", header = F)
failurecon <- read.csv("failurecon.csv", header = F)
# Separate captures and releases
release <- captures
release[which(release > 0)] <- 0
proprel <- release/smax
proprel[which(smax == 0)] <- 0
hist(rowSums(proprel), breaks = 10)
capture <- captures
propcapture <- capture/smax
capture[which(capture < 0)] <- 0
propcapture[which(smax == 0)] <- 0
hist(propcapture, breaks = 100)
sum(rowMeans(propcapture)<0.01)/length(rowMeans(propcapture))*100
mpctcap <- 100*rowMeans(propcapture)
resdf$state=state_ind[match(resdf$fips, fips[1:3109])]
resdf_NY=resdf[resdf$state=='NY',]
max(abs(captures))
